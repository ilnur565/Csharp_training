// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using addressbook_web_tests;


namespace addressbook_web_tests
{

    [TestFixture]
    public class ContactCreationTests : AuthTestBase
    {
        [Test]

       public static IEnumerable<ContactCreationData> RandomContactDataProvider()
        {
            List<ContactCreationData> contacts = new List<ContactCreationData>();

            for (int i =0; i<5; i++)
            {
                contacts.Add(new ContactCreationData(GenerateRandomString(30), GenerateRandomString(30))
                {
                    Address = GenerateRandomString(100),
                    HomePhone = GenerateRandomString(100),
                    MobilePhone = GenerateRandomString(100),
                    WorkPhone = GenerateRandomString(100),
                    Email = GenerateRandomString(100)
                });
            }
            return contacts;
        }

        [Test, TestCaseSource("RandomContactDataProvider")]
        public void ContactCreation(ContactCreationData contact)
        {
            List<ContactCreationData> oldContacts = app.Contact.GetContactList();
            //System.Console.Out.Write(oldContacts.Count);
            //var contact = new ContactCreationData("firstf", "firstsfsdf");
           app.Contact.ContactCreation(contact);
            /*var contact1 = new ContactCreationData("Second", "Second");
            app.Contact.ContactCreation(contact1);*/
            Assert.AreEqual(oldContacts.Count+1, app.Contact.GetContactCount());
            List<ContactCreationData> newContacts = app.Contact.GetContactList();
            oldContacts.Add(contact);
            //oldContacts.Add(contact1);
            //Assert.AreEqual(oldContacts.Count + 1, newContacts.Count);

            
            oldContacts.Sort();
            newContacts.Sort();
            

            
            Assert.AreEqual(oldContacts, newContacts);




            /*app.Contact.InitContactCreation();
            var contact = new ContactCreationtData("Sergeev", "Sergey");
            //contact.Lastname = "";
            contact.Middlename = "";
            contact.Nickname = "1";
            contact.Home = "1";
            contact.Company = "s";
            contact.Address = "sdf";
            contact.Title = "L";

            app.Contact.FillContactForm(contact)
                        .SubmitNewContact();
            app.Auth.Logout();
                                   // Console.WriteLine(account.Username);
*/
        }

    }
}
